\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

<<32mers>>=
par(mfrow=c(2,2),cex=1.2)
setwd("/Users/alice/Desktop/projects/heterochromatin/trf/chrUn")
A<-read.table("A")
B<-read.table("B")
D<-read.table("D")
E<-read.table("E")
lengthDist<-read.table("chrUn.length_dist")

plot(table(A$V2),main="A",xlab="repeat length",ylab="counts")
abline(v=1000,col="red",lw=3)
plot(table(B$V2),main="B",xlab="repeat length",ylab="counts")
abline(v=1000,col="red",lw=3)
plot(table(D$V2),main="D",xlab="repeat length",ylab="counts")
abline(v=1000,col="red",lw=3)
plot(table(E$V2),main="E",xlab="repeat length",ylab="counts")
abline(v=1000,col="red",lw=3)

plot(table(lengthDist$V2),main="chrUn of chimp female",xlab="contig length distribution",ylab="counts")
abline(v=1000,col="red",lw=3)
@

<<plot heatmap>>=
if (!require("gplots")) {
  install.packages("gplots", dependencies = TRUE)
  library(gplots)
}
if (!require("RColorBrewer")) {
  install.packages("RColorBrewer", dependencies = TRUE)
  library(RColorBrewer)
}
library(heatmap3)

dataOriginal<-as.data.frame(read.table("/Users/alice/Desktop/projects/heterochromatin/32mers/most.abundant.Un.AAACATGGAAATATCTACACCGCTATCTGTAT.nrf.words.aligned.txt",header=TRUE))
sorted <-plyr::arrange(dataOriginal, dataOriginal[,2], decreasing = TRUE)
print(dim(sorted))
plot(table(rowSums(sorted)),ylab="counts",xlab="number of distinct units in one repeat stretch")
data<-sorted[rowSums(sorted)>1, ] #keep only rows where at least two motifs are found
print(dim(data))
data<-data[sort(sample(nrow(data), 5000)), ]
print(dim(data))
data<-data.matrix(data)
my_palette <- colorRampPalette(c("white","red"))(n = 100)

heatmap.2(data[,1:12],dendrogram='column',Rowv=FALSE,Colv=FALSE,trace="none",col=my_palette,key.title ="occurences",notecol="black")
@

<<position bias>>=
par(mfrow=c(2,2),cex=1.1)
setwd("/Users/alice/Desktop/projects/heterochromatin/32mers/")
filenames <- list.files(pattern="*.positions", full.names=FALSE)

for (file in (filenames)) {
tryCatch({
        if (file.size(file) > 0){
        data<-read.table(file, header = F)
        data<-data[sort(sample(nrow(data), 1000)), ]
        boxplot(data$V2 ~ data$V1,col="gold",main=file,ylim=c(0,100),outline=TRUE)
           }
        }, error = function(err) {
            # error handler picks up where error was generated
            print(paste("Read.table didn't work!:  ",err))
        })
}
@

<<gorGor4 versus gorGor5 A>>=
par(mfrow=c(1,1))
setwd("/Users/alice/Desktop/projects/heterochromatin/32mers/gorGor4_vs_gorGor5")
data<-as.data.frame(read.table("gorGor4x5.merged.txt", header=TRUE))
dim(data)

data<- data[(data$gorGor4>=100 | data$gorGor5>=100),]#remove low counts
data$rankGorGor4<-length(data$gorGor4)-rank(data$gorGor4,ties.method ="average")+1
data$rankGorGor5<-length(data$gorGor5)-rank(data$gorGor5,ties.method ="average")+1
data$unitSize<-nchar(as.character(data$unit))

sorted <-plyr::arrange(data, nchar(as.character(data$unit)), decreasing = FALSE)
dim(sorted)
quantile(sorted$gorGor4)
quantile(sorted$gorGor5)
cor(sorted$gorGor4,sorted$gorGor5)
#plot(sorted$gorGor4,sorted$gorGor5)
singletons<-data[data$gorGor4<=2 & data$gorGor5<=2,]
male_biased<-c("AAACATGGAAATATCTACACCGCTATCTGTAT","AAACATGGAAATATCTACACCGCCATCTGTAT","AATGG","AAACATGGAAATATCTACACCGCTATCTCTAT","AAACATGGAAATATCTACACAGCCATCTGTAT","AAATATCTACACCGCTATCTGTATGAACATGG","AAATATCTACACCGCCATCTGTATGAACATGG","AATGGAATGTGG")
#plot(table(nchar(as.character(sorted$unit))),xlab="unit size")
mers<-sorted[sorted$unit %in% male_biased,]
#plot(nchar(as.character(mers$unit)),mers$gorGor4,xlab="unit size",xlim=c(0,50))
#points(nchar(as.character(mers$unit)),mers$gorGor5,xlab="unit size",col="red")

plot(sorted$rankGorGor4,sorted$rankGorGor5,pch=21,col="orange",ylim=c(1,300),xlim=c(1,300))
interesting<-(sorted[abs(sorted$rankGorGor4-sorted$rankGorGor5)>50,]) #ranks differ by more than 50 positions
@

<<>>=
n<-300
par(mfrow=c(2,1),cex=1.4)
 df<-sorted[with(sorted, order(-rankGorGor4)), ]
 #plot(NA,col="blue",pch=20,xlab="Technology",ylab="abundance",xlim=c(-(max(df$rankGorGor4)),max(df$rankGorGor5)),ylim=c(0,n)) 
 
  #points(head(-df$rankGorGor4,n=n),1:n,col="red",pch=20) #Sanger
  #segments(head(-df$rankGorGor4,n=n),1:n,0,1:n,col="gray")
  
  #points(head(+df$rankGorGor5,n=n),1:n,col="blue",pch=20) #PacBio
  #segments(head(+df$rankGorGor5,n=n),1:n,0,1:n,col="gray")
  
  #df$gorGor4<-log(df$gorGor4)
  #df$gorGor5<-log(df$gorGor5)
 plot(NA,col="blue",pch=20,xlab="counts for each repeat motif",ylab="repeat motifs sorted by abundance",xlim=c(0,max(df$gorGor5)),ylim=c(0,n),yaxt = "n") 
 
  segments(head(+df$gorGor5,n=n),1:n,head(+df$gorGor4,n=n),1:n,col="darkgray")
  #segments(head(+df$gorGor4,n=n),1:n,0,1:n,col="gray")
  points(head(+df$gorGor4,n=n),1:n,col=adjustcolor( "red", alpha.f = 0.4),pch='*') #Sanger
  points(head(+df$gorGor5,n=n),1:n,col=adjustcolor( "blue", alpha.f = 0.4),pch='*') #PacBio
  
  legend(60000, 200, legend=c("Sanger", "PacBio"),col=c("red", "blue"), pch=c('*','*'), cex=0.8,box.lty=0,y.intersp=2)

  df$gorGor4<-log(df$gorGor4)
  df$gorGor5<-log(df$gorGor5)
  plot(NA,col="blue",pch=20,xlab="log of counts for each repeat motif",ylab="repeat motifs sorted by abundance",xlim=c(0,max(df$gorGor5)),ylim=c(0,n),yaxt = "n") 
  
  segments(head(+df$gorGor5,n=n),1:n,head(+df$gorGor4,n=n),1:n,col="darkgray")
  points(head(+df$gorGor4,n=n),1:n,col=adjustcolor( "red", alpha.f = 0.4),pch='*') #Sanger
  points(head(+df$gorGor5,n=n),1:n,col=adjustcolor( "blue", alpha.f = 0.4),pch='*') #PacBio
  #segments(head(+df$gorGor4,n=n),1:n,0,1:n,col="gray")
  legend(10, 200, legend=c("Sanger", "PacBio"),col=c("red", "blue"), pch=c('*','*'), cex=0.8,box.lty=0,y.intersp=2)
@


<<gorGor4 versus gorGor5 B>>=
library("seqinr")
require(Biostrings)
myLabels<-nchar(as.character(interesting$unit))
gcContent<-unlist(lapply(as.character(interesting$unit),function(x) GC(unlist(strsplit(x,split="")))))
nuclComposition<-as.data.frame(lapply(as.character(interesting$unit),function(x) alphabetFrequency(DNAString(x), baseOnly=TRUE, as.prob=TRUE)))
colnames(nuclComposition)<-interesting$unit
#View(nuclComposition)

rbPal <- colorRampPalette(c('blue','red'))
text(interesting$rankGorGor4,interesting$rankGorGor5+10,labels=myLabels,cex=0.8,col=rbPal(10)[as.numeric(cut(gcContent,breaks = 10))]) #there is whole range of GC content, no obvious bias, except for extremely low GC content
abline(0,1)

hist(gcContent,breaks=50,col="gold",xlim=c(0,1))

par(mfrow=c(6,6))
sapply(colnames(nuclComposition), function(x) pie(nuclComposition[,x],main=x,col=c("green","red","orange","blue","gray"),sub=paste("unit size:",nchar(as.character(x)))))
plot.new()
legend("center", c("A","G"), pt.cex = 3, cex=1.8, inset = c(-5, 
    0), bty = "n",
   fill = c("green","red"))
plot.new()
legend("center", c("C","T"), pt.cex = 2, cex=1.8, inset = c(-5, 
    0), bty = "n",
   fill = c("orange","blue","gray"))

@


<<LENGTHS>>=
par(mfrow = c(2, 3), cex = 1.1)
setwd("/Users/alice/Desktop/projects/heterochromatin/32mers/gorGor4_vs_gorGor5")
filenames <-
  list.files(pattern = "merged_output_gorGor*", full.names = FALSE)
filenames <- filenames[grepl("gorGor4", filenames)]
filenames <- filenames[grep("AATGG", filenames,invert=TRUE)]

for (file in (filenames)) {
  if (file.size(file) > 0) {
    dataGorGor4 <- read.table(file, header = F)
    dataGorGor5 <- read.table(gsub("gorGor4","gorGor5",file), header = F)
    
    hist(
      dataGorGor5$V7/1000,
      col = rgb(1, 0, 0, 0.5),
      sub = gsub("merged_output_gorGor4.txt.","",file),
      main = paste("Gor5",length(dataGorGor5$V7),"vs Gor4",length(dataGorGor4$V7),"repeats"),
      breaks=50,
      xlab = "length in kb"
    )
    hist(dataGorGor4$V7/1000, col = rgb(0, 0, 1, 0.5), breaks=15,add = T)
    box()
  }
  
}
plot.new()
legend("center", c("PacBio","Sanger"), pt.cex = 2, cex=1.8, bty = "n",
   fill = c(rgb(1, 0, 0, 0.5),rgb(0, 0, 1, 0.5)))
@









\end{document}