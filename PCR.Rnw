\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

<<PCR>>=
par(mfrow=c(3,3))
require(data.table)
require(hexbin)
require(ggplot2)
read_and_normalize <-function(input_file) {
  input<-read.table(input_file,col.names=c("unit","count"))
  #input$count<-input$count/sum(input$count)*1000000
  name<-basename(input_file)
  colnames(input)<-c("unit",name)
  return(as.data.frame(input))
}

PCRplus1 <- read_and_normalize("/Users/alice/Desktop/projects/heterochromatin/PCR/9-24-2013_BO_R1.fastq.dat_output.txt.counts.sortedFilt75")
PCRplus2 <- read_and_normalize("/Users/alice/Desktop/projects/heterochromatin/PCR/6-6-2013_BO_R1.fastq.dat_output.txt.counts.sortedFilt75")
PCRminus <- read_and_normalize("/Users/alice/Desktop/projects/heterochromatin/PCR/1-13-2014_TBO51_R1.fastq.dat_output.txt.counts.sortedFilt75")

BO_readC1<-94110593
BO_readC2<-3587652
TBO_51<-28278372

#LOAD REPEAT COUNTS FOR ALL DATASETS
filenames<-c("plus1","plus2","minus")
files<-list(PCRplus1,PCRplus2,PCRminus)

dt_list <- lapply(files, function(x) {
  out <- as.data.table(x)
  setkey(out, "unit")
  out
})

#MERGE ALL DATASETS INTO SINGLE TABLE
mydt <- function(...) merge(..., by="unit", all=T,suffixes=filenames)
data <- Reduce(mydt, dt_list)

data[is.na(data)] <- 0
colnames(data)<-c("unit",filenames)
data$ulength<-nchar(as.character(data$unit))
data<-as.data.frame(data) #convert to dataframe from data table

#normalize by read count
data$plus1<-data$plus1/BO_readC1*1000000
data$plus2<-data$plus2/BO_readC2*1000000
data$minus<-data$minus/TBO_51*1000000

data<-data[order(rowSums(data[,2:(ncol(data)-1)]),decreasing=T),]
data<-head(data,n=1000)
subset<-scale(data[,2:4],center=FALSE,scale=FALSE)
subset<-subset[rowSums(subset)>(log(100)),] #keep only rows where all three libraries have at least 100 reads total
subset<-as.data.frame(subset)

apply(subset,2,sum)

hexplom(subset,main="1000 most abundant repeats",xlim=c(-10,10),ylim=c(-10,10))

plot(apply(subset,1,sd))

hist(subset$plus1-subset$minus,breaks=10,col="gold")
abline(v=0,col="red",lw=3)
hist(subset$plus2-subset$minus,breaks=10,col="gold")
abline(v=0,col="red",lw=3)
cor(subset,method="spearman")

dist<-as.dist(1-cor(subset,method="spearman")) #distance based on correlation
hcSingle <- hclust(dist,method="single") 
dendSingle <- as.dendrogram(hcSingle)
plot(dendSingle, main = "Clustering using linkage function 'single'",cex=0.3)

plot(subset$plus1,subset$plus2)
abline(a=c(0,0),b=(1),col="red")
plot(subset$plus1,subset$minus)
abline(a=c(0,0),b=(1),col="red")
plot(subset$plus2,subset$minus)
abline(a=c(0,0),b=(1),col="red")

hist(resid(lm(subset$plus2-subset$plus1 ~ 0)),col="pink",breaks=50)
boxplot(resid(lm(subset$plus2-subset$plus1 ~ 0)))
summary(resid(lm(subset$plus2-subset$plus1 ~ 0)))

hist(resid(lm(subset$plus1-subset$minus ~ 0)),col="pink",breaks=50)
boxplot(resid(lm(subset$plus1-subset$minus ~ 0)))
summary(resid(lm(subset$plus1-subset$minus ~ 0)))

hist(resid(lm(subset$plus2-subset$minus ~ 0)),col="pink",breaks=50)
boxplot(resid(lm(subset$plus2-subset$minus ~ 0)))
summary(resid(lm(subset$plus2-subset$minus ~ 0)))
@

<<>>=
par(pty="s")
x=runif(100, 0, 100)
    y=runif (100, 0, 100)
    df=cbind (x,y)
    df=as.data.frame(df)
plot (y~x, data=df, pch=16)
lm1<-lm(y~x, data=df)
line (lm1)
abline(0,1, col="red")
#get residulas for the linear model 
y.resid= resid (lm1)
a=1;b=-1;c=0
xi = (b*(b*x-a*y)-a*c) / (a^2+b^2)
yi = (a*(-b*x+a*y)-b*c) / (a^2+b^2)
segments(x,y,xi,yi,col="blue")
yr = abs(a*x+b*y+c)/sqrt(a^2+b^2)
hist(abs(yr))
@

\end{document}